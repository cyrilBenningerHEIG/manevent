define({ "api": [  {    "type": "post",    "url": "/events",    "title": "Create an event",    "name": "CreateEvent",    "group": "Event",    "version": "1.0.0",    "description": "<p>Registers a new event.</p>",    "examples": [      {        "title": "Example",        "content": "    POST manevent.herokuapp.com/events HTTP/1.1\n    Content-Type: application/json\n\n    { \"name\": \"Caprices Festival 2020\",\n          \"date\": \"2020-04-16\",\n         \"adress\": \"Crans-Montana\",\n          \"time\": \"19h00\",\n          \"description\": \"Caprices Festival is a four-day festival that takes place in Crans-Montana, Switzerland\",\n         \"public\": true,\n           \"member\": []\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n{\n   \"member\": [],\n   \"_id\": \"5dc3f1ed87ca9ddf9882f5b3\",\n   \"name\": \"Caprices Festival 2020\",\n   \"date\": \"2020-04-16\",\n   \"adress\": \"Crans-Montana\",\n   \"time\": \"19h00\",\n   \"description\": \"Caprices Festival is a four-day festival that takes place in Crans-Montana, Switzerland\",\n   \"public\": true,\n   \"__v\": 0\n}",          "type": "json"        }      ]    },    "filename": "routes/events.js",    "groupTitle": "Event",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>date of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "adress",            "description": "<p>adress of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "time",            "description": "<p>planned hour of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the event</p>"          },          {            "group": "Request body",            "type": "array",            "optional": false,            "field": "member",            "description": "<p>list of the participants of the event</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "public",            "description": "<p>defines if the event is public or not</p>"          }        ],        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>date of the event. Date will be automatically formated to the EU standards</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "adress",            "description": "<p>adress of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "time",            "description": "<p>planned hour of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the event</p>"          },          {            "group": "Response body",            "type": "array",            "optional": false,            "field": "member",            "description": "<p>list of the participants of the event</p>"          },          {            "group": "Response body",            "type": "boolean",            "optional": false,            "field": "public",            "description": "<p>defines if the event is public or not</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "__v",            "description": "<p>The versionKey is a property set on each document when first created by Mongoose</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/events/:_id",    "title": "Delete an event",    "name": "DeleteEvent",    "group": "Event",    "version": "1.0.0",    "description": "<p>Permanently deletes an event.</p>",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The unique identifier of the event to retrieve</p>"          }        ]      }    },    "examples": [      {        "title": "Example",        "content": "DELETE manevent.herokuapp.com/events/5dc2d57714b81bd6f50ea8aa HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200\nContent-Type: text/plain \n\n\"The event has been deleted\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "403/Unauthorized",            "description": "<p>The user is not allowed to delete an event</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/InvalidID",            "description": "<p>Event ID is not valid</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No event found with that ID</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      },      "examples": [        {          "title": "403 Unauthorized",          "content": "HTTP/1.1 403 Unauthorized\nContent-Type: text/plain\n\n\"Only admin user can delete an event\"",          "type": "json"        },        {          "title": "404 Invalid ID",          "content": "HTTP/1.1 404 Invalid ID\nContent-Type: text/plain\n\n\"This ID is not valid\"",          "type": "json"        },        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\n\"The event doesn't exist\"",          "type": "json"        }      ]    },    "filename": "routes/events.js",    "groupTitle": "Event"  },  {    "type": "get",    "url": "/filter/events?param=",    "title": "Filter events",    "name": "FilterEvents",    "group": "Event",    "version": "1.0.0",    "description": "<p>Retrieves a paginated list of events matching the filter parameter (in alphabetical order).</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>name of the event</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "date",            "description": "<p>date of the event</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "adress",            "description": "<p>adress of the event</p>"          },          {            "group": "Parameter",            "type": "boolean",            "optional": true,            "field": "public",            "description": "<p>defines if the event is public or not</p>"          }        ],        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>date of the event. Date will be automatically formated to the EU standards</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "adress",            "description": "<p>adress of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "time",            "description": "<p>planned hour of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the event</p>"          },          {            "group": "Response body",            "type": "array",            "optional": false,            "field": "member",            "description": "<p>list of the participants of the event</p>"          },          {            "group": "Response body",            "type": "boolean",            "optional": false,            "field": "public",            "description": "<p>defines if the event is public or not</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "__v",            "description": "<p>The versionKey is a property set on each document when first created by Mongoose</p>"          }        ]      }    },    "examples": [      {        "title": "Example",        "content": "GET manevent.herokuapp.com/events/filter?adress=Lausanne HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n    Location: https://manevent.herokuapp.com/events/filter?=Lausanne;;\n\n    [\n{\n\"member\": [\n  \n],\n\"_id\": \"5dc2d57714b81bd6f50ea8aa\",\n\"name\": \"Marché de Noel de Clos Fleuri\",\n\"date\": \"2019-11-30\",\n\"adress\": \"Lausanne\",\n\"time\": \"11h00\",\n\"description\": \"Venez boire une tasse avec nous et faire vos emplettes pour vos cadeaux de Noël!\",\n\"public\": true,\n\"__v\": 0\n}\n    [\n{\n\"member\": [\n  \n],\n\"_id\": \"5dc2d57714b81bd6f50ea8aa\",\n\"name\": \"Boogie Dance\",\n\"date\": \"2019-10-30\",\n\"adress\": \"Lausanne\",\n\"time\": \"21h00\",\n\"description\": \"Boogie Wonderland!\",\n\"public\": true,\n\"__v\": 0\n}\n    ]",          "type": "json"        }      ]    },    "filename": "routes/events.js",    "groupTitle": "Event",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/events/:_id",    "title": "Request an event's informations",    "name": "RetrieveEvent",    "group": "Event",    "version": "1.0.0",    "description": "<p>Retrieves one event.</p>",    "examples": [      {        "title": "Example",        "content": "GET manevent.herokuapp.com/events/5dc2d57714b81bd6f50ea8aa HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n\n    [\n{\n\"member\": [\n\n],\n\"_id\": \"5dc2d57714b81bd6f50ea8aa\",\n\"name\": \"Marché de Noel de Clos Fleuri\",\n\"date\": \"2019-11-30\",\n\"adress\": \"Prilly\",\n\"time\": \"11h00\",\n\"description\": \"Venez boire une tasse avec nous et faire vos emplettes pour vos cadeaux de Noël!\",\n\"public\": true,\n\"__v\": 0\n}\n    ]",          "type": "json"        }      ]    },    "filename": "routes/events.js",    "groupTitle": "Event",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The unique identifier of the event to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No event found with that ID</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/InvalidID",            "description": "<p>Event ID is not valid</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\n\"The event doesn't exist\"",          "type": "json"        },        {          "title": "404 Invalid ID",          "content": "HTTP/1.1 404 Invalid ID\nContent-Type: text/plain\n\n\"This ID is not valid\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/events",    "title": "Request all events' informations",    "name": "RetrieveEvents",    "group": "Event",    "version": "1.0.0",    "description": "<p>Retrieves a paginated list of events ordered by title (in alphabetical order).</p>",    "examples": [      {        "title": "Example",        "content": "GET manevent.herokuapp.com/events HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n    Location: https://manevent.herokuapp.com/events\n\n    [\n {\n  \"member\": [\n  \n  ],\n  \"_id\": \"5dc2d57714b81bd6f50ea8aa\",\n  \"name\": \"Code la fin API\",\n  \"date\": \"2019-11-18\",\n  \"adress\": \"Yverdon\",\n  \"time\": \"22h10\",\n  \"description\": \"\",\n  \"public\": true,\n  \"__v\": 0\n}\n {\n  \"member\": [\n\n  ],\n  \"_id\": \"5dc2d57714b81bd6f50ea8aa\",\n  \"name\": \"Marché de Noel de Clos Fleuri\",\n  \"date\": \"2019-11-30\",\n  \"adress\": \"Prilly\",\n  \"time\": \"11h00\",\n  \"description\": \"Venez boire une tasse avec nous et faire vos emplettes pour vos cadeaux de Noël!\",\n  \"public\": true,\n  \"__v\": 0\n}\n    ]",          "type": "json"        }      ]    },    "filename": "routes/events.js",    "groupTitle": "Event",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      }    }  },  {    "type": "patch",    "url": "/event/:_id",    "title": "Update an event's informations",    "name": "UpdateEvent",    "group": "Event",    "version": "1.0.0",    "description": "<p>Partially updates an event's data (only the properties found in the request body will be updated). All properties are optional.</p>",    "examples": [      {        "title": "Example",        "content": "    PATCH manevent.herokuapp.com/events/5dc2d57714b81bd6f50ea8aa HTTP/1.1\nContent-Type: application/json\n{ \n\"name\": \"Caprices Festival 2021\"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n{\n   \"member\": [],\n   \"_id\": \"5dc3f1ed87ca9ddf9882f5b3\",\n   \"name\": \"Caprices Festival 2021\",\n   \"date\": \"2020-04-16\",\n   \"adress\": \"Crans-Montana\",\n   \"time\": \"19h00\",\n   \"description\": \"Caprices Festival is a four-day festival that takes place in Crans-Montana, Switzerland\",\n   \"public\": true,\n   \"__v\": 0\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "403/Unauthorized",            "description": "<p>The user is not allowed to update an event</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/InvalidID",            "description": "<p>Event ID is not valid</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No event found with that ID</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      },      "examples": [        {          "title": "403 Unauthorized",          "content": "HTTP/1.1 403 Unauthorized\nContent-Type: text/plain\n\n\"Only admin user can update\"",          "type": "json"        },        {          "title": "404 Invalid ID",          "content": "HTTP/1.1 404 Invalid ID\nContent-Type: text/plain\n\n\"This ID is not valid\"",          "type": "json"        },        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\n\"The event doesn't exist\"",          "type": "json"        }      ]    },    "filename": "routes/events.js",    "groupTitle": "Event",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The unique identifier of the event to retrieve</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>date of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "adress",            "description": "<p>adress of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "time",            "description": "<p>planned hour of the event</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the event</p>"          },          {            "group": "Request body",            "type": "array",            "optional": false,            "field": "member",            "description": "<p>list of the participants of the event</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "public",            "description": "<p>defines if the event is public or not</p>"          }        ],        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>date of the event. Date will be automatically formated to the EU standards</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "adress",            "description": "<p>adress of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "time",            "description": "<p>planned hour of the event</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the event</p>"          },          {            "group": "Response body",            "type": "array",            "optional": false,            "field": "member",            "description": "<p>list of the participants of the event</p>"          },          {            "group": "Response body",            "type": "boolean",            "optional": false,            "field": "public",            "description": "<p>defines if the event is public or not</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "__v",            "description": "<p>The versionKey is a property set on each document when first created by Mongoose</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/users",    "title": "Create an user",    "name": "CreateUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Registers a new user.</p>",    "examples": [      {        "title": "Example",        "content": "    POST manevent.herokuapp.com/users HTTP/1.1\n    Content-Type: application/json\n{\n  \"name\": \"Mama\",\n  \"email\": \"Mama@heig-vd.ch\",\n  \"password\": \"test1\"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n{\n  \"_id\": \"5dc4121df5c89ef55cf2eca0\",\n \"name\": \"Mama\",\n \"email\": \"Mama@heig-vd.ch\",\n \"__v\": 0\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the user</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>email of the user</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password of the user.</p>"          }        ],        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>Unique identifier of the event</p>"          }        ],        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the user</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>email of the user</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/users/:_id",    "title": "Delete an user",    "name": "DeleteUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Permanently deletes an user.</p>",    "examples": [      {        "title": "Example",        "content": "DELETE manevent.herokuapp.com/users/5dc4121df5c89ef55cf2eca0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200\nContent-Type: text/plain \n\n\"The user has been deleted\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "403/Unauthorized",            "description": "<p>The user is not allowed to delete a user</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/InvalidID",            "description": "<p>User ID is not valid</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No user found with that ID</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      },      "examples": [        {          "title": "403 Unauthorized",          "content": "HTTP/1.1 403 Unauthorized\nContent-Type: text/plain\n\n\"You can't delete this user\"",          "type": "json"        },        {          "title": "404 Invalid ID",          "content": "HTTP/1.1 404 Invalid ID\nContent-Type: text/plain\n\n\"This ID is not valid\"",          "type": "json"        },        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\n\"The user doesn't exist\"",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The unique identifier of the user to retrieve</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:_id",    "title": "Request an user's informations",    "name": "RetrieveUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Retrieves one user.</p>",    "examples": [      {        "title": "Example",        "content": "GET manevent.herokuapp.com/users/5dc4121df5c89ef55cf2eca0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n{\n  \"_id\": \"5dc4121df5c89ef55cf2eca0\",\n \"name\": \"Bob\",\n \"email\": \"Bob@heig-vd.ch\",\n \"__v\": 0\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The unique identifier of the user to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/InvalidID",            "description": "<p>User ID is not valid</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No user found with that ID</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      },      "examples": [        {          "title": "404 Invalid ID",          "content": "HTTP/1.1 404 Invalid ID\nContent-Type: text/plain\n\n\"This ID is not valid\"",          "type": "json"        },        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\n\"The user doesn't exist\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users/",    "title": "Request all users informations",    "name": "RetrieveUsers",    "group": "User",    "version": "1.0.0",    "description": "<p>Retrieves a paginated list of users ordered by name (in alphabetical order).</p>",    "examples": [      {        "title": "Example",        "content": "GET manevent.herokuapp.com/users HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "  HTTP/1.1 200 OK\n  Content-Type: application/json\n  Link: &lt;https://manevent.herokuapp.com/users;;\n{\n  \"_id\": \"5dc4121df5c89ef55cf2eca0\",\n  \"name\": \"Fred\",\n  \"email\": \"fred@heig-vd.ch\",\n  \"__v\": 0\n},\n{\n  \"_id\": \"5dd2c983ed5b8c07dfaeaebe\",\n  \"name\": \"Ouioui\",\n  \"email\": \"ouioui@gmail.com\",\n  \"__v\": 0\n},",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      }    }  },  {    "type": "patch",    "url": "/event/:_id",    "title": "Update an user's informations",    "name": "UpdateUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Partially updates an user's data (only the properties found in the request body will be updated). All properties are optional.</p>",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>name of the user</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>email of the user</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>password of the user.</p>"          }        ],        "URL path parameters": [          {            "group": "URL path parameters",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The unique identifier of the user to retrieve</p>"          }        ]      }    },    "examples": [      {        "title": "Example",        "content": "PATCH manevent.herokuapp.com/users/5dc4121df5c89ef55cf2eca0 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"Alice@heig-vd.ch\",\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n{\n  \"_id\": \"5dc4121df5c89ef55cf2eca0\",\n \"name\": \"Alice\",\n \"email\": \"Alice@heig-vd.ch\",\n \"__v\": 0\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "403/Unauthorized",            "description": "<p>The user is not allowed to delete a user</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/InvalidID",            "description": "<p>User ID is not valid</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No user found with that ID</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "500/InternalServerError",            "description": "<p>Server unable to answer</p>"          }        ]      },      "examples": [        {          "title": "403 Unauthorized",          "content": "HTTP/1.1 403 Unauthorized\nContent-Type: text/plain\n\n\"You can't update this user\"",          "type": "json"        },        {          "title": "404 Invalid ID",          "content": "HTTP/1.1 404 Invalid ID\nContent-Type: text/plain\n\n\"This ID is not valid\"",          "type": "json"        },        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\n\"The user doesn't exist\"",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "User"  }] });
